# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export PATH=$HOME/.local/bin:$HOME/.cargo/bin:$PATH

alias ls="exa -lah --git --icons --group-directories-first"
alias bat="bat --style=auto"
alias lv="$HOME/.local/bin/lvim"

source /opt/asdf-vm/asdf.sh

alias cdump="composer dump-autoload"
alias cu="composer update"
alias ci="composer install"

alias dev="npm run dev"
alias build="npm run build"
alias ni="npm install"
alias nu="npm update"

# Artisan
alias pa='php artisan'
alias a='php artisan'
alias tinker='pa tinker'
alias mfs='pa migrate:fresh --seed'
alias mf='pa migrate:fresh'
alias mr='pa migrate:rollback'
alias m='pa migrate'
alias rl='pa route:list'
alias horizon='pa horizon'
alias queue='pa queue'
alias key='a key:generate'
alias serve="a serve"

alias g="git"
alias gs="git status"
alias ga='git add .'
alias nah="git reset --hard;git clean -df"
alias co="git checkout"
alias gl='git log --oneline --decorate --color --graph'
alias gm="git add .;git commiti -m "
alias wip="git add .;git commit -m 'wip' > /dev/null"
alias wips="git add .;git commit -m 'wip' > /dev/null;git push"
alias main='git checout $([ `git rev-parse --quit --verify master` ] && echo "master" || echo "main")'
alias gp=gitpush
alias gpn=gitpush_noverify

gitpush() {
  git add .
  git commit -m "$*"
  giit push
}

gpnv() {
  git add .
  git commit -m "$*" --no-verify
  git push
}

# .files(): sincroniza seus dotfiles com o repo remoto.
# OBS.: o uso de (parênteses) no lugar de {chaves} é 
#       intencional e serve para que não seja necessário
#       fazer um `cd` pra voltar para o diretório anterior
.files() (
  local dotfilesDir="${HOME}/dotfiles"
  local gitStatus

   cd "${dotfilesDir}"

  gitStatus="$(git status --porcelain)"

  if [[ -z "${gitStatus}" ]]; then
    warn "dotfiles: nothing to update"
    return 0
  fi

  git add --all \
    && git status \
    && git commit -m "update $(date +'%Y-%m-%d %R'): ${gitStatus}" \
    && git pull --rebase \
    && git push
)
